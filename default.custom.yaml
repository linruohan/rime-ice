# 继承自 /Library/Input Methods/Squirrel.app/Contents/SharedSupport/default.yaml
patch:
  # 方案列表
  schema_list:
    - schema: pinyin_simp


  # 候选词个数
  menu/page_size: 5


  ascii_composer/good_old_caps_lock: true # Caps 只切换大小写
  ascii_composer/switch_key:
    Caps_Lock: commit_text # 打字打到一半时按下了 Caps 后： commit_code 上屏拼音的英文字母 | commit_text 上屏拼音拼出的词语
    Shift_L: noop # noop | commit_code ，是否用 Shift 切换中英文
    Shift_R: noop # macOS 不会单独响应这个，设定上面那个，左右 Shift 都管用
    Control_L: noop
    Control_R: noop


  # 呼出输入法菜单的快捷键，切换方案、简繁、全半角、中英文符号等。
  switcher/hotkeys:
    # - Control+grave
    # - Control+Shift+grave
    # - F4
    ~ # 无快捷键：只有一个方案、不切换全半角、不切换简繁等，可以设置为空


  # 快捷键设定
  key_binder/bindings:
    # 简繁切换
    - {accept: "Control+Shift+4", toggle: traditionalization, when: always}
    - {accept: "Control+Shift+F", toggle: traditionalization, when: always}
    - {accept: "Control+slash",   toggle: traditionalization, when: always}  # Ctrl + /
    # 切换中英文标点
    # - {accept: "Control+Shift+A", toggle: ascii_punct, when: always}

# 按键绑定： https://github.com/rime/rime-prelude/blob/master/key_bindings.yaml
# 本地文件： /Library/Input Methods/Squirrel.app/Contents/SharedSupport/key_bindings.yaml
    # emacs_editing:
    # - { when: composing, accept: Control+p, send: Up }
    # - { when: composing, accept: Control+n, send: Down }
    # - { when: composing, accept: Control+b, send: Left }
    # - { when: composing, accept: Control+f, send: Right }
    - { when: composing, accept: Control+a, send: Home } # 光标跳转至行首
    - { when: composing, accept: Control+e, send: End }  # 光标跳转至行尾
    # - { when: composing, accept: Control+d, send: Delete }
    # - { when: composing, accept: Control+k, send: Shift+Delete }
    # - { when: composing, accept: Control+h, send: BackSpace }
    # - { when: composing, accept: Control+g, send: Escape }
    # - { when: composing, accept: Control+bracketleft, send: Escape }
    # - { when: composing, accept: Control+y, send: Page_Up }
    # - { when: composing, accept: Alt+v, send: Page_Up }
    # - { when: composing, accept: Control+v, send: Page_Down }

    # move_by_word_with_tab: 这个太他妈好用了，Tab/Shift+Tab 切换光标至下/上一个拼音
    - { when: composing, accept: ISO_Left_Tab, send: Shift+Left }
    - { when: composing, accept: Shift+Tab, send: Shift+Left }
    - { when: composing, accept: Tab, send: Shift+Right }

    # paging_with_minus_equal: 翻页：- =
    - { when: has_menu, accept: minus, send: Page_Up }
    - { when: has_menu, accept: equal, send: Page_Down }

    # paging_with_comma_period: 翻页：, .
    # - { when: paging, accept: comma, send: Page_Up }
    # - { when: has_menu, accept: period, send: Page_Down }

    # paging_with_brackets: 翻页：[ ]
    # - { when: paging, accept: bracketleft, send: Page_Up }
    # - { when: has_menu, accept: bracketright, send: Page_Down }

    # numbered_mode_switch:
    # - { when: always, accept: Control+Shift+1, select: .next }
    # - { when: always, accept: Control+Shift+2, toggle: ascii_mode }
    # - { when: always, accept: Control+Shift+3, toggle: full_shape }
    # - { when: always, accept: Control+Shift+4, toggle: simplification }
    # - { when: always, accept: Control+Shift+5, toggle: extended_charset }
    # - { when: always, accept: Control+Shift+exclam, select: .next }
    # - { when: always, accept: Control+Shift+at, toggle: ascii_mode }
    # - { when: always, accept: Control+Shift+numbersign, toggle: full_shape }
    # - { when: always, accept: Control+Shift+dollar, toggle: simplification }
    # - { when: always, accept: Control+Shift+percent, toggle: extended_charset }

    # windows_compatible_mode_switch:
    # - { when: always, accept: Shift+space, toggle: full_shape }
    # - { when: always, accept: Control+period, toggle: ascii_punct }

    # optimized_mode_switch:
    # - { when: always, accept: Control+Shift+space, select: .next }
    # - { when: always, accept: Shift+space, toggle: ascii_mode }
    # - { when: always, accept: Control+comma, toggle: full_shape }
    # - { when: always, accept: Control+period, toggle: ascii_punct }
    # - { when: always, accept: Control+slash, toggle: simplification }
    # - { when: always, accept: Control+backslash, toggle: extended_charset }
